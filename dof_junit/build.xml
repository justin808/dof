<!--The tasks relevant to building the dof.jar start with "dof"
    All other tasks are part of the sample accounting program which demonstrates
    the proper functioning of the DOF, as well as the use of mock objects
    and a dependency location pattern -->

<project name="dof_junit" default="junit" basedir=".">

    <!-- Name of project and version -->

    <!-- Global properties for this build -->
    <property name="TOP" value="."/>
    <property name="lib.dir" value="lib"/>
    <property name="class.dir" value="bin"/>
    <property name="src.dir" value="src"/>
    <property name="junit.dir" value="${TOP}/junit"/>
    <property name="junit_db.dir" value="${TOP}/junit_db"/>
    <property name="dof_core.src.dir" value="${TOP}/../core/dof_src"/>
    <property name="dof_core.junit.dir" value="${TOP}/../core/dof_junit"/>
    <property name="dof_core.data.dir" value="../core/dof"/>
    <property name="etc.class.dir" value="etc"/>
    <property environment="env"/>
    <property name="home.path" value="${env.HOMEPATH}"/>
    <property name="junit.out.dir" value="${TOP}/junit_out"/>
    <property name="dof.data.dir" value="${TOP}/test_data"/>
    <property name="db.dir" value="${TOP}/db"/>

    <!-- Classpath declaration -->
    <path id="lib.classpath">
        <fileset dir="${lib.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <target name="compile" >
        <mkdir dir="${class.dir}"/>
        <javac destdir="${class.dir}"
               srcdir="${dof_core.src.dir}:${dof_core.junit.dir}:${src.dir}:${junit.dir}:${junit_db.dir}">
        <classpath>
            <path refid="lib.classpath"/>
        </classpath>
        </javac>
    </target>


    <target name="junit"
            depends="compile">
        <delete dir="${junit.out.dir}"/>
        <mkdir dir="${junit.out.dir}"/>
        <echo level="info"
              message="About to execute DOF JUnit tests." />
        <junit haltonfailure="yes">
            <jvmarg value="-DDOF_DIR=${dof.data.dir}"/>
            <classpath>
                <path refid="lib.classpath"/>
                <pathelement location="${class.dir}"/>
                <pathelement location="${etc.class.dir}"/>
            </classpath>
            <formatter type="plain"/>
            <test fork="yes" todir="${junit.out.dir}" name="org.doframework.sample.AllTestSuiteInProcessDb"/>
            <!--<batchtest fork="yes" todir="${junit.out.dir}">-->
                <!--<fileset dir="${junit_db.dir}">-->
                    <!--<include name="**/AllTestSuiteInProcessDb.java"/>-->
                <!--</fileset>-->
            <!--</batchtest>-->
        </junit>

        <junit haltonfailure="yes">
            <jvmarg value="-DDOF_DIR=${dof_core.data.dir}"/>
            <jvmarg value="-DDOF_DEBUG=true"/>
            <classpath>
                <path refid="lib.classpath"/>
                <pathelement location="${class.dir}"/>
            </classpath>
            <formatter type="plain"/>
            <test fork="yes" todir="${junit.out.dir}" name="org.doframework.AllTestSuiteCore"/>
            <!--<batchtest fork="yes" todir="${junit.out.dir}">-->
            <!--<fileset dir="${junit_db.dir}">-->
            <!--<include name="**/AllTestSuiteInProcessDb.java"/>-->
            <!--</fileset>-->
            <!--</batchtest>-->
        </junit>

        <echo level="info"
              message="Finished executing DOF JUnit tests." />
    </target>



    <target name="shutdown.hsqldb">
        <java classname="org.doframework.sample.persistence.jdbc_persistence.Shutdown" fork="true">
            <classpath>
                <path refid="lib.classpath"/>
                <pathelement location="${class.dir}"/>
                <pathelement location="${etc.class.dir}"/>
            </classpath>
        </java>
    </target>


    <target name="start.hsqldb" depends="shutdown.hsqldb">
        <!--<delete file="${db.dir}/*.*"/>-->
        <java classname="org.doframework.sample.persistence.jdbc_persistence.Shutdown" fork="true">
            <classpath>
                <path refid="lib.classpath"/>
                <pathelement location="${class.dir}"/>
                <pathelement location="${etc.class.dir}"/>
            </classpath>
        </java>

        <delete dir="${db.dir}"/>
        <mkdir dir="${db.dir}"/>
        <copy file="etc/server.properties" todir="${db.dir}"/>
        <java classname="org.hsqldb.Server" fork="true" dir="${db.dir}">
            <classpath>
                <path refid="lib.classpath"/>
            </classpath>
        </java>
        <sleep seconds="2"/>

    </target>


    <target name="start.db.gui">
        <java classname="org.hsqldb.util.DatabaseManager" fork="true">
            <classpath>
                <path refid="lib.classpath"/>
            </classpath>
        </java>
    </target>



    <target name="create.schema" depends="compile">
        <java classname="org.doframework.sample.persistence.jdbc_persistence.CreateSchema" fork="true">
            <classpath>
                <path refid="lib.classpath"/>
                <pathelement location="${class.dir}"/>
                <pathelement location="${etc.class.dir}"/>
            </classpath>
        </java>
    </target>



</project>
